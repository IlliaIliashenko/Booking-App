// <auto-generated />
using System;
using Booking.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Booking.DAL.Migrations
{
    [DbContext(typeof(BookingContext))]
    [Migration("20210921135143_SeedingData")]
    partial class SeedingData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Booking.DAL.Models.Authentication.RoleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "7e7b1b20-6296-48dc-95d5-c586b1b6b10c",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "4c8df897-9a7b-4523-8365-dd9fb8aee2fa",
                            Name = "UserWithNoPermission",
                            NormalizedName = "USERWITHNOPERMISSION"
                        });
                });

            modelBuilder.Entity("Booking.DAL.Models.Authentication.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Booking.DAL.Models.Booking.ApartmentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Apartments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Аренда VIP 2-ух комнатной квартиры в Новострое",
                            Price = 9500m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Сдам 2 к. кв Новые дома 25 микрорайон",
                            Price = 6500m
                        },
                        new
                        {
                            Id = 3,
                            Name = "Сдам 2-х комнатную квартиру (71 м2), 5 минут от м. Университет",
                            Price = 15000m
                        },
                        new
                        {
                            Id = 4,
                            Name = "Сдам 3-ком.квартиру на Сухумской",
                            Price = 27000m
                        },
                        new
                        {
                            Id = 5,
                            Name = "Сдам гостинку",
                            Price = 3000m
                        },
                        new
                        {
                            Id = 6,
                            Name = "Сдам 1к кв в ЖК Ньютона, м,Дворец спорта",
                            Price = 8000m
                        },
                        new
                        {
                            Id = 7,
                            Name = "Сдам 1к квартиру новострой ЖК Квартет возле ТРК Украина",
                            Price = 7300m
                        },
                        new
                        {
                            Id = 8,
                            Name = "Сдам 1-к квартиру, рядом метро Алексеевская",
                            Price = 11000m
                        },
                        new
                        {
                            Id = 9,
                            Name = "Сдам 1 к.квартиру Новые дома.",
                            Price = 4500m
                        },
                        new
                        {
                            Id = 10,
                            Name = "Аренда VIP 2-ух комнатной квартиры в Новострое",
                            Price = 9500m
                        },
                        new
                        {
                            Id = 11,
                            Name = "Сдам в Центре 1 к. кв., 5 мин. метро, без комиссии, сквер-Стрелка!",
                            Price = 11000m
                        },
                        new
                        {
                            Id = 12,
                            Name = "сдам 1 км квартиру в новострое",
                            Price = 7300m
                        },
                        new
                        {
                            Id = 13,
                            Name = "Сдам 1 комнатную квартиру Победа(Алексеевка)",
                            Price = 8000m
                        },
                        new
                        {
                            Id = 14,
                            Name = "Сдам 1 ком. кв. в новострое Салтовка МЖК метро ГероевТруда 5 мин",
                            Price = 7500m
                        },
                        new
                        {
                            Id = 15,
                            Name = "Сдам 1 комнатную евроремонт Салтовка",
                            Price = 1100m
                        },
                        new
                        {
                            Id = 16,
                            Name = "Сдам гостинку воробьевы горы",
                            Price = 6150m
                        });
                });

            modelBuilder.Entity("Booking.DAL.Models.Booking.ApartmentPhotoEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId");

                    b.ToTable("ApartmentPhotos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApartmentId = 1,
                            Path = "ApartmentPhotos/apartment11.jpg"
                        },
                        new
                        {
                            Id = 2,
                            ApartmentId = 1,
                            Path = "ApartmentPhotos/apartment12.jpg"
                        },
                        new
                        {
                            Id = 3,
                            ApartmentId = 1,
                            Path = "ApartmentPhotos/apartment13.jpg"
                        },
                        new
                        {
                            Id = 4,
                            ApartmentId = 2,
                            Path = "ApartmentPhotos/apartment21.jpg"
                        },
                        new
                        {
                            Id = 5,
                            ApartmentId = 2,
                            Path = "ApartmentPhotos/apartment22.jpg"
                        },
                        new
                        {
                            Id = 6,
                            ApartmentId = 2,
                            Path = "ApartmentPhotos/apartment23.jpg"
                        },
                        new
                        {
                            Id = 7,
                            ApartmentId = 3,
                            Path = "ApartmentPhotos/apartment31.jpg"
                        },
                        new
                        {
                            Id = 8,
                            ApartmentId = 3,
                            Path = "ApartmentPhotos/apartment32.jpg"
                        },
                        new
                        {
                            Id = 9,
                            ApartmentId = 3,
                            Path = "ApartmentPhotos/apartment33.jpg"
                        },
                        new
                        {
                            Id = 10,
                            ApartmentId = 4,
                            Path = "ApartmentPhotos/apartment41.jpg"
                        },
                        new
                        {
                            Id = 11,
                            ApartmentId = 4,
                            Path = "ApartmentPhotos/apartment42.jpg"
                        },
                        new
                        {
                            Id = 12,
                            ApartmentId = 4,
                            Path = "ApartmentPhotos/apartment43.jpg"
                        },
                        new
                        {
                            Id = 13,
                            ApartmentId = 5,
                            Path = "ApartmentPhotos/apartment51.jpg"
                        },
                        new
                        {
                            Id = 14,
                            ApartmentId = 5,
                            Path = "ApartmentPhotos/apartment52.jpg"
                        },
                        new
                        {
                            Id = 15,
                            ApartmentId = 5,
                            Path = "ApartmentPhotos/apartment53.jpg"
                        },
                        new
                        {
                            Id = 16,
                            ApartmentId = 6,
                            Path = "ApartmentPhotos/apartment61.jpg"
                        },
                        new
                        {
                            Id = 17,
                            ApartmentId = 6,
                            Path = "ApartmentPhotos/apartment62.jpg"
                        },
                        new
                        {
                            Id = 18,
                            ApartmentId = 6,
                            Path = "ApartmentPhotos/apartment63.jpg"
                        },
                        new
                        {
                            Id = 19,
                            ApartmentId = 7,
                            Path = "ApartmentPhotos/apartment71.jpg"
                        },
                        new
                        {
                            Id = 20,
                            ApartmentId = 7,
                            Path = "ApartmentPhotos/apartment72.jpg"
                        },
                        new
                        {
                            Id = 21,
                            ApartmentId = 7,
                            Path = "ApartmentPhotos/apartment73.jpg"
                        },
                        new
                        {
                            Id = 22,
                            ApartmentId = 8,
                            Path = "ApartmentPhotos/apartment81.jpg"
                        },
                        new
                        {
                            Id = 23,
                            ApartmentId = 8,
                            Path = "ApartmentPhotos/apartment82.jpg"
                        },
                        new
                        {
                            Id = 24,
                            ApartmentId = 8,
                            Path = "ApartmentPhotos/apartment83.jpg"
                        },
                        new
                        {
                            Id = 25,
                            ApartmentId = 9,
                            Path = "ApartmentPhotos/apartment91.jpg"
                        },
                        new
                        {
                            Id = 26,
                            ApartmentId = 9,
                            Path = "ApartmentPhotos/apartment92.jpg"
                        },
                        new
                        {
                            Id = 27,
                            ApartmentId = 9,
                            Path = "ApartmentPhotos/apartment93.jpg"
                        },
                        new
                        {
                            Id = 28,
                            ApartmentId = 10,
                            Path = "ApartmentPhotos/apartment101.jpg"
                        },
                        new
                        {
                            Id = 29,
                            ApartmentId = 10,
                            Path = "ApartmentPhotos/apartment102.jpg"
                        },
                        new
                        {
                            Id = 30,
                            ApartmentId = 10,
                            Path = "ApartmentPhotos/apartment103.jpg"
                        },
                        new
                        {
                            Id = 31,
                            ApartmentId = 11,
                            Path = "ApartmentPhotos/apartment111.jpg"
                        },
                        new
                        {
                            Id = 32,
                            ApartmentId = 11,
                            Path = "ApartmentPhotos/apartment112.jpg"
                        },
                        new
                        {
                            Id = 33,
                            ApartmentId = 11,
                            Path = "ApartmentPhotos/apartment113.jpg"
                        },
                        new
                        {
                            Id = 34,
                            ApartmentId = 12,
                            Path = "ApartmentPhotos/apartment121.jpg"
                        },
                        new
                        {
                            Id = 35,
                            ApartmentId = 12,
                            Path = "ApartmentPhotos/apartment122.jpg"
                        },
                        new
                        {
                            Id = 36,
                            ApartmentId = 12,
                            Path = "ApartmentPhotos/apartment123.jpg"
                        },
                        new
                        {
                            Id = 37,
                            ApartmentId = 13,
                            Path = "ApartmentPhotos/apartment131.jpg"
                        },
                        new
                        {
                            Id = 38,
                            ApartmentId = 13,
                            Path = "ApartmentPhotos/apartment132.jpg"
                        },
                        new
                        {
                            Id = 39,
                            ApartmentId = 13,
                            Path = "ApartmentPhotos/apartment133.jpg"
                        },
                        new
                        {
                            Id = 40,
                            ApartmentId = 14,
                            Path = "ApartmentPhotos/apartment141.jpg"
                        },
                        new
                        {
                            Id = 41,
                            ApartmentId = 14,
                            Path = "ApartmentPhotos/apartment142.jpg"
                        },
                        new
                        {
                            Id = 42,
                            ApartmentId = 14,
                            Path = "ApartmentPhotos/apartment143.jpg"
                        },
                        new
                        {
                            Id = 43,
                            ApartmentId = 15,
                            Path = "ApartmentPhotos/apartment151.jpg"
                        },
                        new
                        {
                            Id = 44,
                            ApartmentId = 15,
                            Path = "ApartmentPhotos/apartment152.jpg"
                        },
                        new
                        {
                            Id = 45,
                            ApartmentId = 15,
                            Path = "ApartmentPhotos/apartment153.jpg"
                        },
                        new
                        {
                            Id = 46,
                            ApartmentId = 16,
                            Path = "ApartmentPhotos/apartment161.jpg"
                        },
                        new
                        {
                            Id = 47,
                            ApartmentId = 16,
                            Path = "ApartmentPhotos/apartment162.jpg"
                        },
                        new
                        {
                            Id = 48,
                            ApartmentId = 16,
                            Path = "ApartmentPhotos/apartment163.jpg"
                        });
                });

            modelBuilder.Entity("Booking.DAL.Models.Booking.AppointmentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Visited")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("Booking.DAL.Models.Booking.DetailsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValueType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Address",
                            ValueType = "System.String"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Floor",
                            ValueType = "System.Int32"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Rooms",
                            ValueType = "System.Int32"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Size",
                            ValueType = "System.Int32"
                        });
                });

            modelBuilder.Entity("Booking.DAL.Models.Booking.DetailsToApartmentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApartmentId")
                        .HasColumnType("int");

                    b.Property<int>("DetailsId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("DetailsId");

                    b.ToTable("ApartmentDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApartmentId = 1,
                            DetailsId = 1,
                            Value = "Цілиноградська вулиця, 48-в, Харків, Харківська область, 61202"
                        },
                        new
                        {
                            Id = 2,
                            ApartmentId = 1,
                            DetailsId = 2,
                            Value = "2"
                        },
                        new
                        {
                            Id = 3,
                            ApartmentId = 1,
                            DetailsId = 3,
                            Value = "2"
                        },
                        new
                        {
                            Id = 4,
                            ApartmentId = 1,
                            DetailsId = 4,
                            Value = "87"
                        },
                        new
                        {
                            Id = 5,
                            ApartmentId = 2,
                            DetailsId = 1,
                            Value = "Новые дома 25 микрорайон"
                        },
                        new
                        {
                            Id = 6,
                            ApartmentId = 2,
                            DetailsId = 2,
                            Value = "3"
                        },
                        new
                        {
                            Id = 7,
                            ApartmentId = 2,
                            DetailsId = 3,
                            Value = "3"
                        },
                        new
                        {
                            Id = 8,
                            ApartmentId = 2,
                            DetailsId = 4,
                            Value = "45"
                        },
                        new
                        {
                            Id = 9,
                            ApartmentId = 3,
                            DetailsId = 1,
                            Value = "м.Университет"
                        },
                        new
                        {
                            Id = 10,
                            ApartmentId = 3,
                            DetailsId = 2,
                            Value = "2"
                        },
                        new
                        {
                            Id = 11,
                            ApartmentId = 3,
                            DetailsId = 3,
                            Value = "2"
                        },
                        new
                        {
                            Id = 12,
                            ApartmentId = 3,
                            DetailsId = 4,
                            Value = "71"
                        },
                        new
                        {
                            Id = 13,
                            ApartmentId = 4,
                            DetailsId = 1,
                            Value = "ул.Сумская,Новострой"
                        },
                        new
                        {
                            Id = 14,
                            ApartmentId = 4,
                            DetailsId = 2,
                            Value = "10"
                        },
                        new
                        {
                            Id = 15,
                            ApartmentId = 4,
                            DetailsId = 3,
                            Value = "2"
                        },
                        new
                        {
                            Id = 16,
                            ApartmentId = 4,
                            DetailsId = 4,
                            Value = "95"
                        },
                        new
                        {
                            Id = 17,
                            ApartmentId = 5,
                            DetailsId = 1,
                            Value = "улица Дидро 30,метро Академика Павлова"
                        },
                        new
                        {
                            Id = 18,
                            ApartmentId = 5,
                            DetailsId = 2,
                            Value = "1"
                        },
                        new
                        {
                            Id = 19,
                            ApartmentId = 5,
                            DetailsId = 3,
                            Value = "1"
                        },
                        new
                        {
                            Id = 20,
                            ApartmentId = 5,
                            DetailsId = 4,
                            Value = "18"
                        },
                        new
                        {
                            Id = 21,
                            ApartmentId = 6,
                            DetailsId = 1,
                            Value = "ЖК Ньютона, м,Дворец спорта"
                        },
                        new
                        {
                            Id = 22,
                            ApartmentId = 6,
                            DetailsId = 2,
                            Value = "1"
                        },
                        new
                        {
                            Id = 23,
                            ApartmentId = 6,
                            DetailsId = 3,
                            Value = "1"
                        },
                        new
                        {
                            Id = 24,
                            ApartmentId = 6,
                            DetailsId = 4,
                            Value = "37"
                        },
                        new
                        {
                            Id = 25,
                            ApartmentId = 7,
                            DetailsId = 1,
                            Value = "ЖК Квартет возле ТРК Украина"
                        },
                        new
                        {
                            Id = 26,
                            ApartmentId = 7,
                            DetailsId = 2,
                            Value = "10"
                        },
                        new
                        {
                            Id = 27,
                            ApartmentId = 7,
                            DetailsId = 3,
                            Value = "2"
                        },
                        new
                        {
                            Id = 28,
                            ApartmentId = 7,
                            DetailsId = 4,
                            Value = "42"
                        },
                        new
                        {
                            Id = 29,
                            ApartmentId = 1,
                            DetailsId = 1,
                            Value = "проспект Л. Свободы."
                        },
                        new
                        {
                            Id = 30,
                            ApartmentId = 8,
                            DetailsId = 2,
                            Value = "9"
                        },
                        new
                        {
                            Id = 31,
                            ApartmentId = 8,
                            DetailsId = 3,
                            Value = "1"
                        },
                        new
                        {
                            Id = 32,
                            ApartmentId = 8,
                            DetailsId = 4,
                            Value = "34"
                        },
                        new
                        {
                            Id = 33,
                            ApartmentId = 9,
                            DetailsId = 1,
                            Value = "Новые Дома"
                        },
                        new
                        {
                            Id = 34,
                            ApartmentId = 9,
                            DetailsId = 2,
                            Value = "3"
                        },
                        new
                        {
                            Id = 35,
                            ApartmentId = 9,
                            DetailsId = 3,
                            Value = "1"
                        },
                        new
                        {
                            Id = 36,
                            ApartmentId = 9,
                            DetailsId = 4,
                            Value = "35"
                        },
                        new
                        {
                            Id = 37,
                            ApartmentId = 10,
                            DetailsId = 1,
                            Value = "Центр м. Исторический музей"
                        },
                        new
                        {
                            Id = 38,
                            ApartmentId = 10,
                            DetailsId = 2,
                            Value = "3"
                        },
                        new
                        {
                            Id = 39,
                            ApartmentId = 10,
                            DetailsId = 3,
                            Value = "1"
                        },
                        new
                        {
                            Id = 40,
                            ApartmentId = 10,
                            DetailsId = 4,
                            Value = "40"
                        },
                        new
                        {
                            Id = 41,
                            ApartmentId = 11,
                            DetailsId = 1,
                            Value = "Московский район"
                        },
                        new
                        {
                            Id = 42,
                            ApartmentId = 11,
                            DetailsId = 2,
                            Value = "10"
                        },
                        new
                        {
                            Id = 43,
                            ApartmentId = 11,
                            DetailsId = 3,
                            Value = "1"
                        },
                        new
                        {
                            Id = 44,
                            ApartmentId = 11,
                            DetailsId = 4,
                            Value = "42"
                        },
                        new
                        {
                            Id = 45,
                            ApartmentId = 12,
                            DetailsId = 1,
                            Value = "Победа(Алексеевка)"
                        },
                        new
                        {
                            Id = 46,
                            ApartmentId = 12,
                            DetailsId = 2,
                            Value = "7"
                        },
                        new
                        {
                            Id = 47,
                            ApartmentId = 12,
                            DetailsId = 3,
                            Value = "1"
                        },
                        new
                        {
                            Id = 48,
                            ApartmentId = 12,
                            DetailsId = 4,
                            Value = "38"
                        },
                        new
                        {
                            Id = 49,
                            ApartmentId = 13,
                            DetailsId = 1,
                            Value = "в новострое Салтовка МЖК метро ГероевТруда"
                        },
                        new
                        {
                            Id = 50,
                            ApartmentId = 13,
                            DetailsId = 2,
                            Value = "7"
                        },
                        new
                        {
                            Id = 51,
                            ApartmentId = 13,
                            DetailsId = 3,
                            Value = "1"
                        },
                        new
                        {
                            Id = 52,
                            ApartmentId = 13,
                            DetailsId = 4,
                            Value = "57"
                        },
                        new
                        {
                            Id = 53,
                            ApartmentId = 14,
                            DetailsId = 1,
                            Value = "ул Бучмы, метро Героев Труда"
                        },
                        new
                        {
                            Id = 54,
                            ApartmentId = 14,
                            DetailsId = 2,
                            Value = "5"
                        },
                        new
                        {
                            Id = 55,
                            ApartmentId = 14,
                            DetailsId = 3,
                            Value = "1"
                        },
                        new
                        {
                            Id = 56,
                            ApartmentId = 14,
                            DetailsId = 4,
                            Value = "38"
                        },
                        new
                        {
                            Id = 57,
                            ApartmentId = 15,
                            DetailsId = 1,
                            Value = "воробьевы горы"
                        },
                        new
                        {
                            Id = 58,
                            ApartmentId = 15,
                            DetailsId = 2,
                            Value = "1"
                        },
                        new
                        {
                            Id = 59,
                            ApartmentId = 15,
                            DetailsId = 3,
                            Value = "12"
                        },
                        new
                        {
                            Id = 60,
                            ApartmentId = 15,
                            DetailsId = 4,
                            Value = "19"
                        },
                        new
                        {
                            Id = 61,
                            ApartmentId = 16,
                            DetailsId = 1,
                            Value = "Цілиноградська вулиця, 48-в, Харків, Харківська область, 61202"
                        },
                        new
                        {
                            Id = 62,
                            ApartmentId = 16,
                            DetailsId = 2,
                            Value = "2"
                        },
                        new
                        {
                            Id = 63,
                            ApartmentId = 16,
                            DetailsId = 3,
                            Value = "2"
                        },
                        new
                        {
                            Id = 64,
                            ApartmentId = 16,
                            DetailsId = 4,
                            Value = "87"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "Booking.Permission",
                            ClaimValue = "users.view",
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Booking.DAL.Models.Booking.ApartmentPhotoEntity", b =>
                {
                    b.HasOne("Booking.DAL.Models.Booking.ApartmentEntity", "Apartment")
                        .WithMany("ApartmentPhotos")
                        .HasForeignKey("ApartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apartment");
                });

            modelBuilder.Entity("Booking.DAL.Models.Booking.AppointmentEntity", b =>
                {
                    b.HasOne("Booking.DAL.Models.Booking.ApartmentEntity", "Apartment")
                        .WithMany("Appointments")
                        .HasForeignKey("ApartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apartment");
                });

            modelBuilder.Entity("Booking.DAL.Models.Booking.DetailsToApartmentEntity", b =>
                {
                    b.HasOne("Booking.DAL.Models.Booking.ApartmentEntity", "Apartment")
                        .WithMany("DetailsToApartment")
                        .HasForeignKey("ApartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Booking.DAL.Models.Booking.DetailsEntity", "Details")
                        .WithMany("DetailsToApartment")
                        .HasForeignKey("DetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Apartment");

                    b.Navigation("Details");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Booking.DAL.Models.Authentication.RoleEntity", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Booking.DAL.Models.Authentication.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Booking.DAL.Models.Authentication.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Booking.DAL.Models.Authentication.RoleEntity", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Booking.DAL.Models.Authentication.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Booking.DAL.Models.Authentication.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Booking.DAL.Models.Booking.ApartmentEntity", b =>
                {
                    b.Navigation("ApartmentPhotos");

                    b.Navigation("Appointments");

                    b.Navigation("DetailsToApartment");
                });

            modelBuilder.Entity("Booking.DAL.Models.Booking.DetailsEntity", b =>
                {
                    b.Navigation("DetailsToApartment");
                });
#pragma warning restore 612, 618
        }
    }
}
